package com.example.laramoviesandroid.models;

import android.util.Log;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.util.ArrayList;

public class Actor {
    private int id;
    private String name;
    private String notes;
    private JSONObject actorDetailJSON;
    private String portraitUrl;
    private ArrayList<FilmActor> filmography;

    public Actor() {
        filmography = new ArrayList<FilmActor>();
    }

    public int getId() {
        return id;
    }

    public Actor setId(int id) {
        this.id = id;
        return this;
    }

    public String getNotes() {
        return notes;
    }

    public Actor setNotes(String notes) {
        this.notes = notes;
        return this;
    }

    public String getName() {
        return name;
    }

    public Actor setName(String name) {
        this.name = name;
        return this;
    }

    public JSONObject getJsonData() {
        return actorDetailJSON;
    }

    public Actor setJsonData(JSONObject jsonData) {
        this.actorDetailJSON = jsonData;
        return this;
    }


    public String getPortraitUrl() {
        return portraitUrl;
    }

    public Actor setPortraitUrl(String portraitUrl) {
        this.portraitUrl = portraitUrl;
        return this;
    }

    public static Actor buildFromJSON(JSONObject actorJSON) throws JSONException{
        Actor newActor = Actor.buildFromJSON(actorJSON, new Actor());

        return newActor;
    }

    public static Actor buildFromJSON(JSONObject actorJSON, Actor actor) throws JSONException {
        actor.setId(actorJSON.getInt("id"))
                .setName(actorJSON.getString("actor_fullname"))
                .setPortraitUrl(actorJSON.getString("portrait"))
                .setNotes(actorJSON.has("actor_notes")
                        ?actorJSON.getString("actor_notes")
                        :"None"
            );
        return actor;
    }

    public static Actor buildFromJSON_old(JSONObject actorJSON) throws JSONException{
        try {
            Actor newActor = new Actor()
                    .setId(actorJSON.getInt("id"))
                    .setName(actorJSON.getString("actor_fullname"))
                    .setPortraitUrl(actorJSON.getString("portrait"))
                    .setNotes(actorJSON.has("actor_notes")
                            ?actorJSON.getString("actor_notes")
                            :"None"
                    );
        }catch (JSONException e) {
            e.printStackTrace();
        }
        return null;
    }

    /**
     * 
     * @param actorDetailJSON actor details retrieved from show() on server
     * @return a reference to the Filmography in the actor model
     * @throws JSONException generated by JSONObject.get... method calls
     */
    public ArrayList<FilmActor> buildFilmography(JSONObject actorDetailJSON) throws JSONException {
        filmography.clear();
        Log.i(null, "Actor Filmography built!");
        Log.i(null, actorDetailJSON.toString());
        JSONArray actorFilmsJSON = actorDetailJSON.getJSONArray("films");
        for(int i = 0 ; i <  actorFilmsJSON.length() ; i++) {
            JSONObject currentActorFilm = actorFilmsJSON.getJSONObject(i);
            JSONObject pivot = currentActorFilm.getJSONObject("pivot");
            filmography.add(new FilmActor()
                .setActorName(this.name)
                .setActorId(this.id)
                .setCharacterName(pivot.getString("character"))
                .setFilmName(currentActorFilm.getString("film_title"))
                .setFilmId(currentActorFilm.getInt("id"))
            );
        }
        return this.filmography;
    }

    public ArrayList<FilmActor> getFilmography() {
        return this.filmography;
    }
}
